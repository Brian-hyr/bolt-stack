generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String    @id @default(cuid())
  username        String    @unique
  email           String    @unique
  password        String
  contato         String?
  chatid          String?
  is_admin        Boolean   @default(false)
  is_collaborator Boolean   @default(false)
  is_client       Boolean   @default(true)
  date_joined     DateTime  @default(now())
  last_login      DateTime?
  updatedAt       DateTime  @updatedAt
  workflows       Workflow[]

  @@map("users")
}

model Cliente {
  id         Int       @id @default(autoincrement())
  name       String    @db.VarChar(255)
  sigla      String?   @db.VarChar(50)
  comentario String?   @db.Text
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())
  asn_id     Int?
  domain_id  Int?
  workflows  Workflow[]

  @@map("clientes")
}

model Workflow {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  nodes       Json
  edges       Json
  created_at  DateTime  @default(now())
  updated_at  DateTime  @default(now())
  user_id     String
  client_id   Int?
  is_active   Boolean   @default(true)
  user        User      @relation(fields: [user_id], references: [id])
  client      Cliente?  @relation(fields: [client_id], references: [id])

  @@map("workflows")
}

model WorkflowExecution {
  id          Int      @id @default(autoincrement())
  workflow_id Int
  status      String   @default("pending") // pending, running, completed, failed
  started_at  DateTime @default(now())
  ended_at    DateTime?
  logs        Json?
  result      Json?

  @@map("workflow_executions")
}